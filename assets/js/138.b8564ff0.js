(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{526:function(a,s,t){"use strict";t.r(s);var r=t(7),n=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"fortran学习笔记-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fortran学习笔记-1"}},[a._v("#")]),a._v(" Fortran学习笔记-1")]),a._v(" "),s("p",[a._v("Fortran其实就是Formula Translation的缩写，因此从数学表达式转换为Fortran语句是非常方便直观的，这可能也是Fortran活到现在的原因之一吧。")]),a._v(" "),s("p",[a._v("我们课题组目前使用较多的VASP软件源码就是Fortran，本人因此开始了Fortran的初级学习。")]),a._v(" "),s("h2",{attrs:{id:"_1-fortran的字符集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-fortran的字符集"}},[a._v("#")]),a._v(" 1. Fortran的字符集")]),a._v(" "),s("h3",{attrs:{id:"_1-1-fortran的字符集合集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-fortran的字符集合集"}},[a._v("#")]),a._v(" 1.1 Fortran的字符集合集")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("大小写英文字母：A到Z，a到z；")])]),a._v(" "),s("li",[s("p",[a._v("数字：0到9；")])]),a._v(" "),s("li",[s("p",[a._v("22个特殊符号：")]),a._v(" "),s("p",[a._v("+加法，-减法，乘法，/除法，()小括号；")]),a._v(" "),s("p",[a._v("=等号，>大于，<小于；")]),a._v(" "),s("p",[a._v(', 英文逗号，.英文句号，:英文冒号，;英文分号，‘单引号，"双引号；')]),a._v(" "),s("p",[a._v("_下划线，空格，%百分号，&与，$美元符号，?问号，!感叹号；")])])]),a._v(" "),s("h3",{attrs:{id:"_1-2-fortran字符集注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-fortran字符集注意事项"}},[a._v("#")]),a._v(" 1.2 Fortran字符集注意事项")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("Fortran源代码中不区分大小写，变量a和变量A完全是同一个变量。")])]),a._v(" "),s("li",[s("p",[a._v("以感叹号!开头的一行视作注释。")])]),a._v(" "),s("li",[s("p",[a._v('不支持使用"{}"划分代码结构，甚至"{}","[]"都不是合法的Fortran源代码字符；也不要求使用任何的缩进划分代码结构，只是为了方便阅读建议使用。')])]),a._v(" "),s("li",[s("p",[a._v("每一行结尾不需要以分号;结尾。每一行至多132个字符，如果代码过长需要跨行拼接：在第一行的行尾使用&，第二行的行首使用&进行拼接。(只在一行使用&也是可以的)")])]),a._v(" "),s("li",[s("p",[a._v("空格除了方便阅读以外没有任何意义，甚至可以用空格分隔保留关键词。")])]),a._v(" "),s("li",[s("p",[a._v("变量名可以含有字母，数字和下划线，但是只允许字母开头，不允许下划线、数字开头。")])])]),a._v(" "),s("h3",{attrs:{id:"_1-3-禁止变量的默认类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-禁止变量的默认类型"}},[a._v("#")]),a._v(" 1.3 禁止变量的默认类型")]),a._v(" "),s("p",[a._v("Fortran变量由于历史原因，存在默认类型，即首字母为大小写的I,J,K,L,M,N的变量视作整数，其他视作浮点数。")]),a._v(" "),s("p",[a._v("这一情况导致了使用Fortran编码时稍不注意就会犯错，因此往往都会通过下面这一行代码来禁用这一默认：")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implicit none")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"_2-fortran的变量类型与运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-fortran的变量类型与运算符"}},[a._v("#")]),a._v(" 2. Fortran的变量类型与运算符")]),a._v(" "),s("h3",{attrs:{id:"_2-1-整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-整数"}},[a._v("#")]),a._v(" 2.1 整数")]),a._v(" "),s("p",[a._v("用integer声明，两种kind，分别是2和4，对应2bytes和4bytes；")]),a._v(" "),s("h3",{attrs:{id:"_2-2-实浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-实浮点数"}},[a._v("#")]),a._v(" 2.2 实浮点数")]),a._v(" "),s("p",[a._v("用real声明，两种kind，分别是4和8，对应4bytes和8bytes；")]),a._v(" "),s("h3",{attrs:{id:"_2-3-复浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-复浮点数"}},[a._v("#")]),a._v(" 2.3 复浮点数")]),a._v(" "),s("p",[a._v("用complex声明，两种kind，分别是4和8，对应4bytes和8bytes；")]),a._v(" "),s("h3",{attrs:{id:"_2-4-字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-字符"}},[a._v("#")]),a._v(" 2.4 字符")]),a._v(" "),s("p",[a._v("character声明")]),a._v(" "),s("h3",{attrs:{id:"_2-5-逻辑变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-逻辑变量"}},[a._v("#")]),a._v(" 2.5 逻辑变量")]),a._v(" "),s("p",[a._v("logical声明，仅支持.true.和.false.（注意两侧的英文句号）")]),a._v(" "),s("h3",{attrs:{id:"_2-6-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-运算符"}},[a._v("#")]),a._v(" 2.6 运算符")]),a._v(" "),s("p",[a._v("+，加法，-，减法")]),a._v(" "),s("p",[a._v("*，乘法，/，除法")]),a._v(" "),s("p",[a._v("**乘方")]),a._v(" "),s("p",[a._v("() 括号，改变优先级")]),a._v(" "),s("h2",{attrs:{id:"_3-变量声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-变量声明"}},[a._v("#")]),a._v(" 3. 变量声明")]),a._v(" "),s("h3",{attrs:{id:"_3-1-变量声明位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-变量声明位置"}},[a._v("#")]),a._v(" 3.1 变量声明位置")]),a._v(" "),s("p",[a._v("与c语言不同，Fortran对于变量声明的位置要求严格，只能在程序代码的可执行部分之前，一旦开始执行输入输出或者运算就不能再进行变量声明，报编译错误。")]),a._v(" "),s("h3",{attrs:{id:"_3-2-变量声明时赋值变为常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-变量声明时赋值变为常量"}},[a._v("#")]),a._v(" 3.2 变量声明时赋值变为常量")]),a._v(" "),s("p",[a._v("变量如果在声明后，执行前被赋值，则变量被视为常量。后续操作不能改变常量，否则编译错误。")]),a._v(" "),s("h3",{attrs:{id:"_3-3-变量声明时-可以不声明kind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-变量声明时-可以不声明kind"}},[a._v("#")]),a._v(" 3.3 变量声明时，可以不声明kind")]),a._v(" "),s("p",[a._v("用kind明确指定变量的字节数确保跨平台性，也可以不使用kind使用默认的字节数；")]),a._v(" "),s("h3",{attrs:{id:"_3-4-常见变量声明例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-常见变量声明例子"}},[a._v("#")]),a._v(" 3.4 常见变量声明例子")]),a._v(" "),s("p",[a._v("一般声明")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" a1\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" a2 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 也代表kind=4")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" b1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 也代表kind=2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("real")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" b2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b3 "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 可以同时声明多个变量")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("常量声明")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[a._v("a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0_4")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 确保是单精度浮点数")]),a._v("\nab "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0_8")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 确保是双精度浮点数")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("还是常量声明")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! type 1")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("complex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! type 2")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("real")]),a._v(" pi\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("parameter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("pi"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.1415926")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("类型转换")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("real")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("a2\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("integer")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n\na1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("c "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 0")]),a._v("\na2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("real")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("real")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("! 0.5")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h2",{attrs:{id:"_4-入门例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-入门例子"}},[a._v("#")]),a._v(" 4. 入门例子")]),a._v(" "),s("h3",{attrs:{id:"_4-1-hello-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-hello-world"}},[a._v("#")]),a._v(" 4.1 hello world")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("program")]),a._v(" main\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implicit none")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello,world!"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end program")]),a._v(" main\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("这里main是我们给program起的名称，也可以是其他名称;")]),a._v(" "),s("p",[a._v("Fortran程序只需要有唯一的program并从这里开始执行，在end处结束;")]),a._v(" "),s("p",[a._v("implicit命令必须在program之后的第一行。")]),a._v(" "),s("h3",{attrs:{id:"_4-2-hello-io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-hello-io"}},[a._v("#")]),a._v(" 4.2 Hello IO")]),a._v(" "),s("div",{staticClass:"language-fortran line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-fortran"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("program")]),a._v(" main\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implicit none")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("integer")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("::")]),a._v(" a\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"please input a:"')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" a\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("a\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("end program")]),a._v(" main\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("write是标准的输出语句，read是标准的输入语句。")]),a._v(" "),s("p",[a._v("其中的("),s("em",[a._v(",")]),a._v(")：第一个"),s("em",[a._v("指的是默认的输入/输出设备，第二个")]),a._v("是默认的输入/输出格式，可以改成其他的参数，先不管这些细节，("),s("em",[a._v(",")]),a._v(")将就着总是可以用的。 print语句也可以用来输出，但是局限于向屏幕输出，建议使用write完全替代。")])])}),[],!1,null,null,null);s.default=n.exports}}]);